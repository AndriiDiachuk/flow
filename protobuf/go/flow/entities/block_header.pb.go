// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flow/entities/block_header.proto

package entities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockHeader struct {
	Id                   []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId             []byte                 `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Height               uint64                 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PayloadHash          []byte                 `protobuf:"bytes,5,opt,name=payload_hash,json=payloadHash,proto3" json:"payload_hash,omitempty"`
	View                 uint64                 `protobuf:"varint,6,opt,name=view,proto3" json:"view,omitempty"`
	ParentVoterIds       [][]byte               `protobuf:"bytes,7,rep,name=parent_voter_ids,json=parentVoterIds,proto3" json:"parent_voter_ids,omitempty"`
	ParentVoterSigData   []byte                 `protobuf:"bytes,8,opt,name=parent_voter_sig_data,json=parentVoterSigData,proto3" json:"parent_voter_sig_data,omitempty"`
	ProposerId           []byte                 `protobuf:"bytes,9,opt,name=proposer_id,json=proposerId,proto3" json:"proposer_id,omitempty"`
	ProposerSigData      []byte                 `protobuf:"bytes,10,opt,name=proposer_sig_data,json=proposerSigData,proto3" json:"proposer_sig_data,omitempty"`
	ChainId              string                 `protobuf:"bytes,11,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ParentVoterIndices   []byte                 `protobuf:"bytes,12,opt,name=parent_voter_indices,json=parentVoterIndices,proto3" json:"parent_voter_indices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9d8363da0276a74, []int{0}
}

func (m *BlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeader.Unmarshal(m, b)
}
func (m *BlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeader.Marshal(b, m, deterministic)
}
func (m *BlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeader.Merge(m, src)
}
func (m *BlockHeader) XXX_Size() int {
	return xxx_messageInfo_BlockHeader.Size(m)
}
func (m *BlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeader proto.InternalMessageInfo

func (m *BlockHeader) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *BlockHeader) GetParentId() []byte {
	if m != nil {
		return m.ParentId
	}
	return nil
}

func (m *BlockHeader) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockHeader) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *BlockHeader) GetPayloadHash() []byte {
	if m != nil {
		return m.PayloadHash
	}
	return nil
}

func (m *BlockHeader) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *BlockHeader) GetParentVoterIds() [][]byte {
	if m != nil {
		return m.ParentVoterIds
	}
	return nil
}

func (m *BlockHeader) GetParentVoterSigData() []byte {
	if m != nil {
		return m.ParentVoterSigData
	}
	return nil
}

func (m *BlockHeader) GetProposerId() []byte {
	if m != nil {
		return m.ProposerId
	}
	return nil
}

func (m *BlockHeader) GetProposerSigData() []byte {
	if m != nil {
		return m.ProposerSigData
	}
	return nil
}

func (m *BlockHeader) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *BlockHeader) GetParentVoterIndices() []byte {
	if m != nil {
		return m.ParentVoterIndices
	}
	return nil
}

type TimeoutCertificate struct {
	View                 uint64             `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	HighQcViews          []uint64           `protobuf:"varint,2,rep,packed,name=high_qc_views,json=highQcViews,proto3" json:"high_qc_views,omitempty"`
	HighestQc            *QuorumCertificate `protobuf:"bytes,3,opt,name=highest_qc,json=highestQc,proto3" json:"highest_qc,omitempty"`
	SignerIndices        [][]byte           `protobuf:"bytes,4,rep,name=signer_indices,json=signerIndices,proto3" json:"signer_indices,omitempty"`
	SigData              []byte             `protobuf:"bytes,5,opt,name=sig_data,json=sigData,proto3" json:"sig_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TimeoutCertificate) Reset()         { *m = TimeoutCertificate{} }
func (m *TimeoutCertificate) String() string { return proto.CompactTextString(m) }
func (*TimeoutCertificate) ProtoMessage()    {}
func (*TimeoutCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9d8363da0276a74, []int{1}
}

func (m *TimeoutCertificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeoutCertificate.Unmarshal(m, b)
}
func (m *TimeoutCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeoutCertificate.Marshal(b, m, deterministic)
}
func (m *TimeoutCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeoutCertificate.Merge(m, src)
}
func (m *TimeoutCertificate) XXX_Size() int {
	return xxx_messageInfo_TimeoutCertificate.Size(m)
}
func (m *TimeoutCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeoutCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_TimeoutCertificate proto.InternalMessageInfo

func (m *TimeoutCertificate) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *TimeoutCertificate) GetHighQcViews() []uint64 {
	if m != nil {
		return m.HighQcViews
	}
	return nil
}

func (m *TimeoutCertificate) GetHighestQc() *QuorumCertificate {
	if m != nil {
		return m.HighestQc
	}
	return nil
}

func (m *TimeoutCertificate) GetSignerIndices() [][]byte {
	if m != nil {
		return m.SignerIndices
	}
	return nil
}

func (m *TimeoutCertificate) GetSigData() []byte {
	if m != nil {
		return m.SigData
	}
	return nil
}

type QuorumCertificate struct {
	View                 uint64   `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	BlockId              []byte   `protobuf:"bytes,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	SignerIndices        [][]byte `protobuf:"bytes,3,rep,name=signer_indices,json=signerIndices,proto3" json:"signer_indices,omitempty"`
	SigData              []byte   `protobuf:"bytes,4,opt,name=sig_data,json=sigData,proto3" json:"sig_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuorumCertificate) Reset()         { *m = QuorumCertificate{} }
func (m *QuorumCertificate) String() string { return proto.CompactTextString(m) }
func (*QuorumCertificate) ProtoMessage()    {}
func (*QuorumCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9d8363da0276a74, []int{2}
}

func (m *QuorumCertificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuorumCertificate.Unmarshal(m, b)
}
func (m *QuorumCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuorumCertificate.Marshal(b, m, deterministic)
}
func (m *QuorumCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuorumCertificate.Merge(m, src)
}
func (m *QuorumCertificate) XXX_Size() int {
	return xxx_messageInfo_QuorumCertificate.Size(m)
}
func (m *QuorumCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_QuorumCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_QuorumCertificate proto.InternalMessageInfo

func (m *QuorumCertificate) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *QuorumCertificate) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *QuorumCertificate) GetSignerIndices() [][]byte {
	if m != nil {
		return m.SignerIndices
	}
	return nil
}

func (m *QuorumCertificate) GetSigData() []byte {
	if m != nil {
		return m.SigData
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockHeader)(nil), "flow.entities.BlockHeader")
	proto.RegisterType((*TimeoutCertificate)(nil), "flow.entities.TimeoutCertificate")
	proto.RegisterType((*QuorumCertificate)(nil), "flow.entities.QuorumCertificate")
}

func init() { proto.RegisterFile("flow/entities/block_header.proto", fileDescriptor_b9d8363da0276a74) }

var fileDescriptor_b9d8363da0276a74 = []byte{
	// 516 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x8e, 0xd3, 0x3c,
	0x14, 0x55, 0xda, 0x7c, 0xfd, 0xb9, 0x69, 0xfb, 0x31, 0x16, 0x20, 0xcf, 0x80, 0x34, 0xa1, 0x12,
	0x52, 0xc4, 0x22, 0x19, 0x86, 0x0d, 0x3b, 0xa4, 0x81, 0xc5, 0x64, 0x47, 0x03, 0x9a, 0x05, 0x9b,
	0xc8, 0x8d, 0xdd, 0xd8, 0xa2, 0x8d, 0x33, 0xb1, 0x3b, 0x23, 0xf6, 0x3c, 0x15, 0x2f, 0xc1, 0x2b,
	0x21, 0xdb, 0x4d, 0x68, 0x34, 0x23, 0xb1, 0xa9, 0x7a, 0xcf, 0x3d, 0xb9, 0xe7, 0xf8, 0xf8, 0x1a,
	0xc2, 0xcd, 0x56, 0xde, 0x27, 0xac, 0xd2, 0x42, 0x0b, 0xa6, 0x92, 0xf5, 0x56, 0x16, 0xdf, 0x73,
	0xce, 0x08, 0x65, 0x4d, 0x5c, 0x37, 0x52, 0x4b, 0x34, 0x37, 0x8c, 0xb8, 0x65, 0x9c, 0x9d, 0x97,
	0x52, 0x96, 0x5b, 0x96, 0xd8, 0xe6, 0x7a, 0xbf, 0x49, 0xb4, 0xd8, 0x31, 0xa5, 0xc9, 0xae, 0x76,
	0xfc, 0xe5, 0xaf, 0x21, 0x04, 0x57, 0x66, 0xcc, 0xb5, 0x9d, 0x82, 0x16, 0x30, 0x10, 0x14, 0x7b,
	0xa1, 0x17, 0xcd, 0xb2, 0x81, 0xa0, 0xe8, 0x05, 0x4c, 0x6b, 0xd2, 0xb0, 0x4a, 0xe7, 0x82, 0xe2,
	0x81, 0x85, 0x27, 0x0e, 0x48, 0x29, 0x7a, 0x0e, 0x23, 0xce, 0x44, 0xc9, 0x35, 0x1e, 0x86, 0x5e,
	0xe4, 0x67, 0x87, 0x0a, 0xbd, 0x87, 0x69, 0xa7, 0x83, 0xfd, 0xd0, 0x8b, 0x82, 0xcb, 0xb3, 0xd8,
	0x39, 0x89, 0x5b, 0x27, 0xf1, 0xd7, 0x96, 0x91, 0xfd, 0x25, 0xa3, 0x57, 0x30, 0xab, 0xc9, 0x8f,
	0xad, 0x24, 0x34, 0xe7, 0x44, 0x71, 0xfc, 0x9f, 0x55, 0x0c, 0x0e, 0xd8, 0x35, 0x51, 0x1c, 0x21,
	0xf0, 0xef, 0x04, 0xbb, 0xc7, 0x23, 0x2b, 0x69, 0xff, 0xa3, 0x08, 0x9e, 0x1c, 0x5c, 0xde, 0x49,
	0xcd, 0x9a, 0x5c, 0x50, 0x85, 0xc7, 0xe1, 0x30, 0x9a, 0x65, 0x0b, 0x87, 0xdf, 0x18, 0x38, 0xa5,
	0x0a, 0xbd, 0x85, 0x67, 0x3d, 0xa6, 0x12, 0x65, 0x4e, 0x89, 0x26, 0x78, 0x62, 0x95, 0xd0, 0x11,
	0xfd, 0x8b, 0x28, 0x3f, 0x11, 0x4d, 0xd0, 0x39, 0x04, 0x75, 0x23, 0x6b, 0xa9, 0xec, 0x60, 0x3c,
	0xb5, 0x44, 0x68, 0xa1, 0x94, 0xa2, 0x37, 0x70, 0xd2, 0x11, 0xba, 0x79, 0x60, 0x69, 0xff, 0xb7,
	0x8d, 0x76, 0xd8, 0x29, 0x4c, 0x0a, 0x4e, 0x44, 0x65, 0x26, 0x05, 0xa1, 0x17, 0x4d, 0xb3, 0xb1,
	0xad, 0x53, 0x8a, 0x2e, 0xe0, 0x69, 0xff, 0x10, 0x15, 0x15, 0x05, 0x53, 0x78, 0xf6, 0xc0, 0x59,
	0xea, 0x3a, 0xcb, 0xdf, 0x1e, 0x20, 0x13, 0xa3, 0xdc, 0xeb, 0x8f, 0xac, 0xd1, 0x62, 0x23, 0x0a,
	0xa2, 0x59, 0x97, 0x90, 0x77, 0x94, 0xd0, 0x12, 0xe6, 0x5c, 0x94, 0x3c, 0xbf, 0x2d, 0x72, 0x53,
	0x2b, 0x3c, 0x08, 0x87, 0x91, 0x9f, 0x05, 0x06, 0x5c, 0x15, 0x37, 0x06, 0x42, 0x1f, 0x00, 0x4c,
	0xc9, 0x94, 0xce, 0x6f, 0x0b, 0x7b, 0xa5, 0xc1, 0x65, 0x18, 0xf7, 0x16, 0x2a, 0x5e, 0xed, 0x65,
	0xb3, 0xdf, 0x1d, 0xa9, 0x65, 0xd3, 0xc3, 0x37, 0xab, 0x02, 0xbd, 0x86, 0x85, 0x12, 0x65, 0x75,
	0xe4, 0xdd, 0xb7, 0x97, 0x30, 0x77, 0xe8, 0xc1, 0xb6, 0xc9, 0xa0, 0x8b, 0xc9, 0x5d, 0xf0, 0x58,
	0xb9, 0x78, 0x96, 0x3f, 0x3d, 0x38, 0x79, 0x20, 0xf1, 0xe8, 0x81, 0x4e, 0x61, 0xe2, 0xd6, 0xbf,
	0xdb, 0xcb, 0xb1, 0xad, 0x53, 0xfa, 0x88, 0x8d, 0xe1, 0xbf, 0x6c, 0xf8, 0x3d, 0x1b, 0x57, 0x9f,
	0xe1, 0xa5, 0x6c, 0xca, 0x58, 0x56, 0xf6, 0xf0, 0xdd, 0xca, 0xb6, 0x29, 0x7c, 0xbb, 0x28, 0x85,
	0xe6, 0xfb, 0x75, 0x5c, 0xc8, 0x5d, 0xe2, 0x48, 0x89, 0xfd, 0xe9, 0x9e, 0x59, 0x29, 0x93, 0xde,
	0x53, 0x5d, 0x8f, 0x6c, 0xeb, 0xdd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x83, 0x99, 0x74, 0xbd,
	0xc2, 0x03, 0x00, 0x00,
}
